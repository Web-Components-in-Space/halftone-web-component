const Mean=t=>t.reduce((t,e)=>t+e)/t.length,Round=t=>Math.round(1e4*t)/1e4,SquareRootOfTwo=Math.sqrt(2),SquareRootOfThree=Math.sqrt(3);class BaseShapes{static get DEFAULT_DISTANCE(){return 7}static get DEFAULT_RENDERER(){return"svgpath"}get rendererType(){return this.constructor.ShapeName}set distanceBetween(t){this.opts.distanceBetween=t,this.inputSource&&this.init()}get distanceBetween(){return this.opts.distanceBetween}set inverse(t){this.opts.inverse=t,this.inputSource&&this.init()}get inverse(){return this.opts.inverse}set inputSizeConstraint(t){this.opts.inputSizeConstraint=t,this.inputSource&&this.init()}get inputSizeConstraint(){return this.opts.inputSizeConstraint}constructor(t,e){this.dots=[],this.buckets=[],this.inputSource=void 0,this.outputCanvas=t.outputCanvas||void 0,this.buffer=document.createElement("canvas"),this.bufferContext=void 0,this.outputCanvasContext=void 0,this.inputData=void 0,this.width=void 0,this.height=void 0,this.displayWidth=void 0,this.displayHeight=void 0,this.benchmarking=[],this.opts=t||{},void 0===this.opts.distanceBetween&&(this.opts.distanceBetween=BaseShapes.DEFAULT_DISTANCE),void 0===this.opts.renderer&&(this.opts.renderer=BaseShapes.DEFAULT_RENDERER),this.preInit(),e&&(this.input=e)}get isSourceReady(){return!!this.width&&!!this.height}preInit(){}async loadImage(i){return new Promise((e,t)=>{const s=new Image;s.addEventListener("load",t=>{this.input=s,e()}),s.src=i})}set input(t){this.inputSource=t,this.width=this.inputSource.width|this.inputSource.videoWidth,this.height=this.inputSource.height|this.inputSource.videoHeight,this.isSourceReady&&this.init()}processPixels(){}calculateR(t){}renderSVGShape(t,e,s){}renderBitmapShape(t,e,s){}pushToBucket(t,e){this.dots.push([t,e,[]]);var s=Math.ceil(t/10),i=Math.ceil(e/10);0<=s&&0<=i&&this.buckets[s]&&this.buckets[s][i]&&this.buckets[s][i].push(t,e,this.dots.length-1)}init(){let t;this.opts.benchmark&&(t={start:Date.now(),title:"initialization"});let e=this.width,s=this.height;this.opts.inputSizeConstraint&&(this.width>this.height?(e=this.opts.inputSizeConstraint,s=this.opts.inputSizeConstraint*(this.height/this.width)):(s=this.opts.inputSizeConstraint,e=this.opts.inputSizeConstraint*(this.width/this.height))),this.m=Math.max(e,s),this.div=Math.max(1,this.m/1e3),this.scale=this.opts.distanceBetween/3,this.W=Math.round(e/this.div/this.scale),this.H=Math.round(s/this.div/this.scale),this.buckets=this.initBuckets(this.W,this.H),this.dots=[],this.A=this.opts.distanceBetween/this.scale,this.aspectRatio=e/s,this.buffer.width=this.W,this.buffer.height=this.H,this.bufferContext=this.buffer.getContext("2d"),this.bufferContext.drawImage(this.inputSource,0,0,this.W,this.H),this.inputData=this.bufferContext.getImageData(0,0,this.W,this.H).data,"canvas"===this.opts.renderer&&this.setCanvasOutputSize(this.opts.outputSize?this.opts.outputSize.width:e,this.opts.outputSize?this.opts.outputSize.height:s),t&&(t.end=Date.now(),this.benchmarking.push(t),t={start:Date.now(),title:"process"}),this.processPixels(),t&&(t.end=Date.now(),this.benchmarking.push(t))}setCanvasOutputSize(t,e){this.opts.outputSize={width:t,height:e},this.outputCanvas||(this.outputCanvas=document.createElement("canvas")),this.outputCanvas.width=t,this.outputCanvas.height=e,this.outputCanvasContext=this.outputCanvas.getContext("2d")}initBuckets(t,e){var s=Math.ceil(t/10)+20,i=Math.ceil(e/10)+20;const h=[];for(let e=0;e<s;e++){h.push([]);for(let t=0;t<i;t++)h[e].push([])}return h}render(t=!1){t&&(this.dots=[],this.buckets=this.initBuckets(this.W,this.H),this.bufferContext.drawImage(this.inputSource,0,0,this.W,this.H),this.inputData=this.bufferContext.getImageData(0,0,this.W,this.H).data,this.processPixels());let e;this.opts.benchmark&&(e={start:Date.now(),title:"calculate"});let r,o,n;for(let a=0;a<this.H;a++)for(let h=0;h<this.W;h++){var u=a*(4*this.W)+4*h;let e=1/0,s;var c=Math.ceil(h/10),p=Math.ceil(a/10);let i;o===c&&n===p?i=r:(i=0===c&&0===p?[].concat(this.buckets[c][p],this.buckets[c][p+1],this.buckets[c+1][p],this.buckets[c+1][p+1]):0===c&&0<p?[].concat(this.buckets[c][p],this.buckets[c][p-1],this.buckets[c][p+1],this.buckets[c+1][p],this.buckets[c+1][p-1],this.buckets[c+1][p+1]):0<c&&0===p?[].concat(this.buckets[c][p],this.buckets[c][p+1],this.buckets[c-1][p],this.buckets[c-1][p+1],this.buckets[c+1][p],this.buckets[c+1][p+1]):[].concat(this.buckets[c][p],this.buckets[c][p-1],this.buckets[c][p+1],this.buckets[c-1][p],this.buckets[c-1][p-1],this.buckets[c-1][p+1],this.buckets[c+1][p],this.buckets[c+1][p-1],this.buckets[c+1][p+1]),r=i),o=c,n=p;for(let t=0;t<i.length;t+=3){var l=(i[t]-h)**2+(i[t+1]-a)**2;l<e&&(e=l,s=this.dots[i[t+2]])}u=this.inputData[1+u]||0;!0===this.opts.inverse&&s[2].push(u),this.opts.inverse||s[2].push(255-u)}e&&(e.end=Date.now(),this.benchmarking.push(e),e={start:Date.now(),title:"render"});let s;switch(this.opts.renderer){case"svgpath":s=this.renderSVGPath();break;case"svg":const i=document.createElementNS("http://www.w3.org/2000/svg","svg");i.setAttribute("width",this.width),i.setAttribute("height",this.height),i.innerHTML=`<path d="${this.renderSVGPath()}"></path>`,s=i;break;case"canvas":this.renderBitmap(),s=this.outputCanvas}return e&&(e.end=Date.now(),this.benchmarking.push(e),this.logPerformance()),s}renderSVGPath(){const h={x:this.width/(this.W*this.scale),y:this.height/(this.H*this.scale)},a=Array(this.dots.length);return this.dots.forEach((t,e)=>{var s,i;t[2]&&0!==t[2].length&&(s=Mean(t[2])/255,i=this.calculateR(s),s=t[0]*this.scale*h.x,t=t[1]*this.scale*h.y,i=Round(i*this.scale)*h.x,a[e]=this.renderSVGShape(s,t,i,h))}),a.join("")}renderBitmap(){const i={x:this.outputCanvas.width/(this.W*this.scale),y:this.outputCanvas.height/(this.H*this.scale)};this.dots.forEach(t=>{var e,s;t[2]&&(e=Mean(t[2])/255,s=this.calculateR(e),e=t[0]*this.scale*i.x,t=t[1]*this.scale*i.y,s=Round(s*this.scale)*i.x,this.renderBitmapShape(e,t,s,i))})}logPerformance(){let s=0;this.benchmarking.forEach(t=>{var e=t.end-t.start;s+=e,console.log(` - ${t.title} : ${e}ms`)}),console.log(` Total time: ${s} ms`),this.benchmarking=[]}clearBenchmarks(){this.benchmarking=[]}}const SQUARE=(t,e,s,i)=>{t.beginPath(),t.rect(e-i/2,s-i/2,i,i),t.fill()},CIRCLE=(t,e,s,i)=>{t.beginPath(),t.arc(e,s,i,0,2*Math.PI),t.fill()},TRIANGLE=(t,e,s,i,h)=>{var a=i/3*2;t.beginPath();var r=e,i=s+h*a,e=r,s=i;t.moveTo(e,s),e+=-a*SquareRootOfThree/2,t.lineTo(e,s+=h*-a/2*3),e+=a*SquareRootOfThree,t.lineTo(e,s),t.lineTo(r,i),t.fill()},DIAMOND=(t,e,s,i)=>{var h=i/=SquareRootOfTwo;t.beginPath();var a=e,i=s-h/2,e=a,s=i;t.moveTo(e,s),t.lineTo(e+=h,s+=h),t.lineTo(e+=-h,s+=h),t.lineTo(e+=-h,s+=-h),t.lineTo(a,i),t.fill()},HEXAGON=(t,e,s,i)=>{var h=i/2,a=h*SquareRootOfThree;t.beginPath();var r=e,o=s-i,e=r,s=o;t.moveTo(e,s),t.lineTo(e+=a,s+=h),t.lineTo(e,s+=i),t.lineTo(e+=-a,s+=h),t.lineTo(e+=-a,s+=-h),t.lineTo(e,s+=-i),t.lineTo(r,o),t.fill()},CROSS=(t,e,s,i,h)=>{t.beginPath();var a=e-i/2,r=s-h-i/2,e=a,s=r;t.moveTo(e,s),t.lineTo(e+=i,s),t.lineTo(e,s+=h),t.lineTo(e+=h,s),t.lineTo(e,s+=i),t.lineTo(e+=-h,s),t.lineTo(e,s+=h),t.lineTo(e+=-i,s),t.lineTo(e,s+=-h),t.lineTo(e+=-h,s),t.lineTo(e,s+=-i),t.lineTo(e+=h,s),t.lineTo(a,r),t.fill()},SQUARE$1=(t,e,s)=>`M${t-s/2},${e-s/2}h${s}v${s}h${-s}z`,CIRCLE$1=(t,e,s)=>`M${Round(t)},${Round(e-s)}a${[s,s,0,0,1,0,2*s]}a${[s,s,0,0,1,0,-2*s]}z`,TRIANGLE$1=(t,e,s,i)=>{s=s/3*2;return`M${t},${e+i*s}l${-s*SquareRootOfThree/2},${i*-s/2*3}h${s*SquareRootOfThree}z`},DIAMOND$1=(t,e,s)=>{s=s/=SquareRootOfTwo;return`M${t},${e-s/2}l${s},${s},${-s},${s},${-s},${-s}z`},HEXAGON$1=(t,e,s)=>{var i=s/2,h=i*SquareRootOfThree;return`M${t},${e-s}l${h},${i}v${s}l${-h},${i},${-h},${-i}v${-s}z`},CROSS$1=(t,e,s,i)=>`M${t-s/2},${e-i-s/2}h${s}v${i}h${i}v${s}h${-i}v${i}h${-s}v${-i}h${-i}v${-s}h${i}z`;class Hexagons extends BaseShapes{static get ShapeName(){return"hexagons"}processPixels(){let t=0,e=0,s=!0;for(;e<this.H;)this.pushToBucket(t,e),t+=this.A,t>this.W&&(e+=this.A/2*SquareRootOfThree,t=this.A/2*s,s=!s)}calculateR(t){return this.A*Math.sqrt(t/3)}renderBitmapShape(t,e,s){HEXAGON(this.outputCanvasContext,t,e,s)}renderSVGShape(t,e,s){return HEXAGON$1(t,e,s)}}class Circles extends BaseShapes{static get ShapeName(){return"circles"}processPixels(){let t=0,e=0,s=!0;for(;e<this.H;)this.pushToBucket(t,e),t+=this.A,t>this.W&&(e+=this.A/2*SquareRootOfThree,t=this.A/2*s,s=!s)}calculateR(t){var e=36*(Math.PI-2*SquareRootOfThree)/(this.A**2*2*SquareRootOfThree*(3-2*SquareRootOfThree)**2),s=this.A**2*SquareRootOfThree/2/Math.PI,i=this.A*SquareRootOfThree/3;return t<Math.PI/(2*SquareRootOfThree)?Math.sqrt(t*s):(2*i*e+Math.sqrt(4*i**2*e**2-4*e*(e*i**2+1-t)))/(2*e)}renderSVGShape(t,e,s){return CIRCLE$1(t,e,s)}renderBitmapShape(t,e,s){CIRCLE(this.outputCanvasContext,t,e,s)}}class CircularDots extends BaseShapes{static get ShapeName(){return"circulardots"}processPixels(){var e=this.W/2,s=this.H/2,t=Math.hypot(e,s);let i=this.A,h=6;for(this.pushToBucket(e,s);i<t;){var a=2*Math.PI/h;for(let t=0;t<h;t++){var r=e+i*Math.cos(a*t),o=s+i*Math.sin(a*t);this.pushToBucket(r,o)}i+=this.A*SquareRootOfThree/2,h+=6}}calculateR(t){var e=36*(Math.PI-2*SquareRootOfThree)/(this.A**2*2*SquareRootOfThree*(3-2*SquareRootOfThree)**2),s=this.A**2*SquareRootOfThree/2/Math.PI,i=this.A*SquareRootOfThree/3;return t<Math.PI/(2*SquareRootOfThree)?Math.sqrt(t*s):(2*i*e+Math.sqrt(4*i**2*e**2-4*e*(e*i**2+1-t)))/(2*e)}renderSVGShape(t,e,s){return CIRCLE$1(t,e,s)}renderBitmapShape(t,e,s){CIRCLE(this.outputCanvasContext,t,e,s)}}class SunflowerDots extends BaseShapes{static get ShapeName(){return"sunflowerdots"}processPixels(){var t=this.W/2,e=this.H/2;this.pushToBucket(t+this.A/2,e);var s=Math.PI*(3-5**.5);let i=0,h=this.A/2*i**.5,a=i*s;for(var r=Math.hypot(t,e);h<r;){var o=t+h*Math.cos(a),n=e+h*Math.sin(a);this.pushToBucket(o,n),i++,h=this.A/2*i**.5,a=i*s}}calculateR(t){var e=36*(Math.PI-2*SquareRootOfThree)/(this.A**2*2*SquareRootOfThree*(3-2*SquareRootOfThree)**2),s=this.A**2*SquareRootOfThree/2/Math.PI,i=this.A*SquareRootOfThree/3;return t<Math.PI/(2*SquareRootOfThree)?Math.sqrt(t*s):(2*i*e+Math.sqrt(4*i**2*e**2-4*e*(e*i**2+1-t)))/(2*e)}renderSVGShape(t,e,s){return CIRCLE$1(t,e,s)}renderBitmapShape(t,e,s){CIRCLE(this.outputCanvasContext,t,e,s)}}class AltCircles extends BaseShapes{static get ShapeName(){return"altcircles"}processPixels(){let t=0,e=0;for(;e<this.H;)this.pushToBucket(t,e),t+=this.A,t>this.W&&(e+=this.A,t=0)}calculateR(t){var e=(Math.PI-4)/(this.A**2*(3-2*SquareRootOfTwo));return t<Math.PI/4?Math.sqrt(t*this.A**2/Math.PI):(this.A*e*SquareRootOfTwo+Math.sqrt(4*e*(t-1)))/(2*e)}renderSVGShape(t,e,s){return CIRCLE$1(t,e,s)}renderBitmapShape(t,e,s){CIRCLE(this.outputCanvasContext,t,e,s)}}class Squares extends BaseShapes{static get ShapeName(){return"squares"}processPixels(){let t=0,e=0;for(;e<this.H;)this.pushToBucket(t,e),t+=this.A,t>this.W&&(e+=this.A,t=0)}calculateR(t){return this.A*Math.sqrt(t)}renderBitmapShape(t,e,s){SQUARE(this.outputCanvasContext,t,e,s)}renderSVGShape(t,e,s){return SQUARE$1(t,e,s)}}class Crosses extends BaseShapes{static get ShapeName(){return"crosses"}set crossBarLength(t){this.opts.crossBarLength=t,this.inputSource&&this.init()}get crossBarLength(){return this.opts.crossBarLength}init(){super.init(),void 0===this.opts.crossBarLength&&(this.opts.crossBarLength=this.opts.distanceBetween/2),this.cbarLength=this.opts.crossBarLength/this.scale}processPixels(){let t=0,e=0,s=!0;for(;e<this.H;)this.pushToBucket(t,e),t+=this.A,t>this.W&&(e+=this.A/4*3,t=this.A/2*s,s=!s)}calculateR(t){return(this.A*Math.sqrt(this.cbarLength**2+2.25*this.A**2*t-3*this.A*this.cbarLength*t)-this.A*this.cbarLength)/(3*this.A-4*this.cbarLength)}renderBitmapShape(t,e,s,i){var h=Round(this.A*this.scale*i.x),i=Round(this.cbarLength*this.scale*i.x),i=s*(h-i)/h+(i-s)/2;CROSS(this.outputCanvasContext,t,e,s,i)}renderSVGShape(t,e,s,i){var h=Round(this.A*this.scale*i.x),i=Round(this.cbarLength*this.scale*i.x),i=s*(h-i)/h+(i-s)/2;return CROSS$1(t,e,s,i)}}class Triangles extends BaseShapes{static get ShapeName(){return"triangles"}preInit(){this.processRow=!0,this.processCol=!0,this.outputRow=-1,this.outputCol=-1}processPixels(){let t=0,e=0;this.processRow=!0,this.processCol=!0;let s=e;for(;e<this.H;)this.pushToBucket(t,e),t+=this.A*SquareRootOfThree/2,e+=this.A/2*(this.processCol?-1:1),this.processCol=!this.processCol,t>this.W&&(e=s+this.A*(this.processRow?1:2),s=e,t=0,this.processRow=!this.processRow,this.processCol=this.processRow)}calculateR(t){return 1.5*this.A*Math.sqrt(t)}renderSVGShape(t,e,s){return this.renderCommonShape("svg",t,e,s)}renderBitmapShape(t,e,s){this.renderCommonShape("bitmap",t,e,s)}renderCommonShape(t,e,s,i){if(e||(this.outputRow++,this.outputCol=-1),this.outputCol++,(this.outputCol+this.outputRow)%2){if("svg"===t)return TRIANGLE$1(e,s,i,1);TRIANGLE(this.outputCanvasContext,e,s,i,1)}else{if("svg"===t)return TRIANGLE$1(e,s,i,-1);TRIANGLE(this.outputCanvasContext,e,s,i,-1)}}}class AltTriangles extends BaseShapes{static get ShapeName(){return"alttriangles"}preInit(){this.processRow=!0,this.processCol=!0,this.outputRow=-1,this.outputCol=-1}processPixels(){let t=0,e=0;this.processCol=!0;let s=e;for(;e<this.H;)this.pushToBucket(t,e),t+=this.A*SquareRootOfThree/2,e+=this.A/2*(this.processCol?-1:1),this.processCol=!this.processCol,t>this.W&&(e=s+1.5*this.A,s=e,t=0,this.processCol=!0)}calculateR(t){return 1.5*this.A*Math.sqrt(t)}renderSVGShape(t,e,s){return this.renderCommonShape("svg",t,e,s)}renderBitmapShape(t,e,s){this.renderCommonShape("bitmap",t,e,s)}renderCommonShape(t,e,s,i){if(e||(this.outputRow++,this.outputCol=-1),this.outputCol++,this.outputCol%2){if("svg"===t)return TRIANGLE$1(e,s,i,1);TRIANGLE(this.outputCanvasContext,e,s,i,1)}else{if("svg"===t)return TRIANGLE$1(e,s,i,-1);TRIANGLE(this.outputCanvasContext,e,s,i,-1)}}}class Diamonds extends BaseShapes{static get ShapeName(){return"diamonds"}processPixels(){let t=0,e=0,s=!0;for(;e<this.H;)this.pushToBucket(t,e),t+=this.A*SquareRootOfTwo,t>this.W&&(e+=this.A/SquareRootOfTwo,t=s?this.A/SquareRootOfTwo:0,s=!s)}calculateR(t){return this.A*Math.sqrt(t)}renderSVGShape(t,e,s){return DIAMOND$1(t,e,s)}renderBitmapShape(t,e,s){DIAMOND(this.outputCanvasContext,t,e,s)}}class Waves extends BaseShapes{static get ShapeName(){return"waves"}processPixels(){let t=0,e=0;for(;e<this.H+this.A;)this.pushToBucket(t,e+Math.sin(t/4)),t+=this.A,t>this.W&&(e+=this.A,t=0)}calculateR(t){var e=(Math.PI-4)/(this.A**2*(3-2*SquareRootOfTwo));return t<Math.PI/4?Math.sqrt(t*this.A**2/Math.PI):(this.A*e*SquareRootOfTwo+Math.sqrt(4*e*(t-1)))/(2*e)}renderSVGShape(t,e,s){return CIRCLE$1(t,e,s)}renderBitmapShape(t,e,s){CIRCLE(this.outputCanvasContext,t,e,s)}}class AltSquares extends BaseShapes{static get ShapeName(){return"altsquares"}processPixels(){let t=0,e=0,s=!0;for(;e<this.H;)this.pushToBucket(t,e),t+=this.A,t>this.W&&(e+=this.A,t=this.A/2*s,s=!s)}calculateR(t){return this.A*Math.sqrt(t)}renderBitmapShape(t,e,s){SQUARE(this.outputCanvasContext,t,e,s)}renderSVGShape(t,e,s){return SQUARE$1(t,e,s)}}var Shapes=Object.freeze({__proto__:null,Hexagons:Hexagons,Circles:Circles,CircularDots:CircularDots,SunflowerDots:SunflowerDots,AltCircles:AltCircles,Squares:Squares,Crosses:Crosses,Triangles:Triangles,AltTriangles:AltTriangles,Diamonds:Diamonds,Waves:Waves,AltSquares:AltSquares});const RendererFactory=(e,t,s)=>{const i=Object.entries(Shapes).find(t=>t[1].ShapeName===e)[1];return new i(t,s)},RenderShapeTypes=Object.entries(Shapes).map(t=>t[1].ShapeName);export{RenderShapeTypes,RendererFactory};
